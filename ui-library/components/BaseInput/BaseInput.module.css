.wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text);
}

/* container */
.input {
  position: relative;
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  border: var(--border-width) var(--border-style) var(--color-border);
  background-color: var(--color-surface);
  padding: 0 var(--space-sm);
  border-radius: var(--radius-md);
  transition: box-shadow var(--transition-fast), border-color var(--transition-fast), background var(--transition-fast);
  min-height: 38px;

}

input:focus {
    outline: none !important;
}

.native {
  flex: 1;
  background: transparent;
  border: none;
  font-family: var(--font-family-base);
  font-size: var(--font-size-md);
  color: var(--color-text);
  outline: none !important;
  padding: var(--space-sm) 0;
}
.native::placeholder { color: var(--color-muted); opacity: .85; }

/* number spinners off */
.native::-webkit-outer-spin-button,
.native::-webkit-inner-spin-button { -webkit-appearance: none; margin: 0; }
.native[type=number] { -moz-appearance: textfield; }

/* Clear / Eye buttons */
.clear, .eye {
  background: transparent;
  border: none;
  font-size: 1rem;
  cursor: pointer;
  color: var(--color-muted);
  padding: 0 var(--space-xs);
  line-height: 1;
}
.clear:hover, .eye:hover { color: var(--color-text); }

.iconLeft, .iconRight, .affix {
  display: inline-flex;
  align-items: center;
  color: var(--color-muted);
  gap: var(--space-2xs, 4px);
}

/* States */
.focused {
  box-shadow: var(--shadow-sm);
  border-color: var(--color-primary);
}
.disabled {
  background-color: var(--color-disabled-bg);
  color: var(--color-disabled-text);
  cursor: not-allowed;
}
.invalid {
  border-color: var(--color-error);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-error) 20%, transparent);
}
.valid {
  border-color: var(--color-success);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-success) 18%, transparent);
}

/* Variants = فقط رنگ‌بُردر/پس‌زمینه را دستکاری می‌کنیم */
.primary   { border-color: var(--color-primary); }
.secondary { border-color: var(--color-secondary); }
.outline   { border-color: var(--color-border); background-color: var(--color-surface); }
.ghost     { background-color: transparent; border-color: transparent; }
.error     { border-color: var(--color-error); }
.success   { border-color: var(--color-success); }
.warning   { border-color: var(--color-warning); }
.info      { border-color: var(--color-info); }

/* Sizes */
.sm { min-height: 32px; }
.md { min-height: 38px; }
.lg { min-height: 44px; font-size: var(--font-size-lg); }

.block, .fullWidth { width: 100%; }
.rounded { border-radius: var(--radius-full); }

/* Helper messages */
.hint {
  color: var(--color-muted);
  font-size: var(--font-size-sm);
}
.errorMsg {
  color: var(--color-error);
  font-size: var(--font-size-sm);
}
.successMsg {
  color: var(--color-success);
  font-size: var(--font-size-sm);
}

/* Loading spinner */
.spinner {
  inline-size: 16px;
  block-size: 16px;
  border-radius: 50%;
  border: 2px solid var(--color-border);
  border-top-color: var(--color-primary);
  animation: spin 0.9s linear infinite;
}
@keyframes spin { to { transform: rotate(360deg); } }

/* Standardized states */
:focus-visible{outline:none;box-shadow:0 0 0 var(--focus-ring-offset) var(--color-background),0 0 0 calc(var(--focus-ring-offset) + var(--focus-ring-width)) var(--focus-ring-color);}